-- -------------------------------------------------------------------
-- @2020, Odysseus Data Services, Inc. All rights reserved
-- MIMIC IV CDM Conversion
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- dependency, run after:
--      st_core.sql
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- A draft to apply Wave Forms

-- (Manlik) Regardless of what format we end up with - is to take the meta data and map them into:

-- Procedure
-- [SNOMED.4141651] Continuous ECG monitoring
-- date/time is offset from start of monitor (1/1/1990 if no actual time is given)
-- procedure_source_value = "<wfdb reference ID - ex 3700002_0011>"

-- Device_exposure
-- [SNOMED.45758393] Patient monitoring system module, electrocardiographic
-- device_exposure_start_datetime is the date/time is offset from start of monitor (1/1/1990 if no actual time is given)
-- device_exposure_end_datetime is the start + total duration of the monitor data
-- device_source_value = "<wfdb reference ID - ex 3700002_0011>" 

-- Measurement - heart rate (1 to N), original WFDB reported or generated by our ETL
-- [SNOMED.4239408] Heart rate - units [SNOMED.4118124] bpm
-- date/time is offset from start of monitor (1/1/1990 if no actual time is given)
-- measurement_source_value = "<wfdb reference ID>.<algorithm ID> - ex "3700002_0011.WFDB" or "3700002_0011.CCSIMxv1"

-- Measurement - P-QRS-T derived measurements - aVF R-wave example
-- [LOINC.3022916] R wave amplitude in lead AVF
-- date/time is offset from start of monitor (1/1/1990 if no actual time is given) + segment offset
-- measurement_source_value = "<wfdb reference ID>.<algorithm ID> - ex 3700002_0011.CCSIMxv1"

-- I have ECG measurement map down to lead level

-- The same approach would apply to BP and Respiratory values. 

-- If we derive observations like AFib and Tachycardia - we can further map these to the condition_occurrence table as [4064452] ECG: atrial fibrillation using the same reference time and source
--
-- parsed codes targeted to clinical findings, target cdm table - cdm_condition_occurrence
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- open points:
--      parse XML to create src_* or raw_* tables
--
-- POC source table:
/*
 bq --location=US load --replace --source_format=CSV  --allow_quoted_newlines=True --skip_leading_rows=1 --autodetect waveform_source_poc.raw_case055_ecg_lines3 z_more/raw_case055_ecg_lines3.csv
*/
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- staging tables
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- src_waveform_header
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- Create src_waveform_header table
-- -------------------------------------------------------------------

DROP TABLE IF EXISTS src_waveform_header;
CREATE TABLE src_waveform_header
(       
    reference_id            TEXT,
    raw_files_path          TEXT,
    case_id                 BIGINT,
    subject_id              BIGINT,
    start_datetime          TIMESTAMP,
    end_datetime            TIMESTAMP,
    load_table_id           TEXT,
    load_row_id             BIGINT,
    trace_id                TEXT
);

-- -------------------------------------------------------------------
-- Create src_waveform_mx table
-- -------------------------------------------------------------------

DROP TABLE IF EXISTS src_waveform_mx;
CREATE TABLE src_waveform_mx
(
    case_id                 BIGINT,  -- FK to the header
    segment_name            TEXT,    -- two digits of case_id, 5 digits of internal sequence number
    subject_id              BIGINT,  -- patient's id
    reference_id            TEXT,    -- file name without extension
    mx_datetime             TIMESTAMP, -- time of measurement
    source_code             TEXT,      -- type of measurement
    value_as_number         DOUBLE PRECISION,
    unit_source_value       TEXT, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
    load_table_id           TEXT,
    load_row_id             BIGINT,
    trace_id                TEXT
);

-- -------------------------------------------------------------------
-- Insert sample data into src_waveform_header
-- -------------------------------------------------------------------

INSERT INTO src_waveform_header
SELECT
    subj.short_reference_id             AS reference_id,
    subj.long_reference_id              AS raw_files_path,
    subj.case_id                        AS case_id,
    subj.subject_id                     AS subject_id,
    CAST(src.start_datetime AS TIMESTAMP) AS start_datetime,
    CAST(src.end_datetime AS TIMESTAMP)   AS end_datetime,
    'wf_header'                         AS load_table_id,
    0                                   AS load_row_id,
    json_build_object(
        'subject_id', subj.subject_id,
        'reference_id', subj.short_reference_id
    )::TEXT                             AS trace_id
FROM
    wf_header subj
INNER JOIN
    (
        SELECT 
            case_id, 
            MIN(date_time) AS start_datetime,
            MAX(date_time) AS end_datetime 
        FROM wf_details
        GROUP BY case_id
    ) src
        ON src.case_id = subj.case_id;

-- -------------------------------------------------------------------
-- Insert sample data into src_waveform_mx
-- -------------------------------------------------------------------

INSERT INTO src_waveform_mx
SELECT
    src.case_id                         AS case_id, -- FK to the header
    CAST(src.segment_name AS TEXT)      AS segment_name,
    subj.subject_id                     AS subject_id,
    subj.short_reference_id             AS reference_id,
    CAST(src.date_time AS TIMESTAMP)    AS mx_datetime,
    src.src_name                        AS source_code,
    CAST(src.value AS DOUBLE PRECISION) AS value_as_number,
    unit_concept_name                   AS unit_source_value,
    'wf_details'                        AS load_table_id,
    md5(random()::text || clock_timestamp()::text) AS load_row_id, -- Generate UUID-like value
    json_build_object(
        'case_id', src.case_id,
        'date_time', src.date_time::TEXT,
        'src_name', src.src_name
    )::TEXT                             AS trace_id
FROM
    wf_details src
INNER JOIN
    wf_header subj
        ON src.case_id = subj.case_id;

