-- -------------------------------------------------------------------
-- @2020, Odysseus Data Services, Inc. All rights reserved
-- MIMIC IV CDM Conversion
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- dependency, run after:
--      st_core.sql
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- A draft to apply Wave Forms

-- (Manlik) Regardless of what format we end up with - is to take the meta data and map them into:

-- Procedure
-- [SNOMED.4141651] Continuous ECG monitoring
-- date/time is offset from start of monitor (1/1/1990 if no actual time is given)
-- procedure_source_value = "<wfdb reference ID - ex 3700002_0011>"

-- Device_exposure
-- [SNOMED.45758393] Patient monitoring system module, electrocardiographic
-- device_exposure_start_datetime is the date/time is offset from start of monitor (1/1/1990 if no actual time is given)
-- device_exposure_end_datetime is the start + total duration of the monitor data
-- device_source_value = "<wfdb reference ID - ex 3700002_0011>" 

-- Measurement - heart rate (1 to N), original WFDB reported or generated by our ETL
-- [SNOMED.4239408] Heart rate - units [SNOMED.4118124] bpm
-- date/time is offset from start of monitor (1/1/1990 if no actual time is given)
-- measurement_source_value = "<wfdb reference ID>.<algorithm ID> - ex "3700002_0011.WFDB" or "3700002_0011.CCSIMxv1"

-- Measurement - P-QRS-T derived measurements - aVF R-wave example
-- [LOINC.3022916] R wave amplitude in lead AVF
-- date/time is offset from start of monitor (1/1/1990 if no actual time is given) + segment offset
-- measurement_source_value = "<wfdb reference ID>.<algorithm ID> - ex 3700002_0011.CCSIMxv1"

-- I have ECG measurement map down to lead level

-- The same approach would apply to BP and Respiratory values. 

-- If we derive observations like AFib and Tachycardia - we can further map these to the condition_occurrence table as [4064452] ECG: atrial fibrillation using the same reference time and source
--
-- parsed codes targeted to clinical findings, target cdm table - cdm_condition_occurrence
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- open points:
--      parse XML to create src_* or raw_* tables
--
-- POC source table:
/*
 bq --location=US load --replace --source_format=CSV  --allow_quoted_newlines=True --skip_leading_rows=1 --autodetect waveform_source_poc.raw_case055_ecg_lines3 z_more/raw_case055_ecg_lines3.csv
*/
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- staging tables
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- src_waveform_header
-- -------------------------------------------------------------------

-- -------------------------------------------------------------------
-- src_waveform_header
-- -------------------------------------------------------------------

DROP TABLE IF EXISTS src_waveform_header;
CREATE TABLE src_waveform_header
(
    reference_id            TEXT,
    raw_files_path          TEXT,
    subject_id              INTEGER,
    hadm_id                 INTEGER,
    start_datetime          TIMESTAMP,
    end_datetime            TIMESTAMP,
    load_table_id           TEXT,
    load_row_id             INTEGER,
    trace_id                TEXT
);

-- -------------------------------------------------------------------
-- src_waveform_dx
-- -------------------------------------------------------------------

DROP TABLE IF EXISTS src_waveform_dx;
CREATE TABLE src_waveform_dx
(
    reference_id            TEXT,  -- FK to the header
    waveform_id             TEXT,  -- row number inside the reference_id
    source_code             TEXT,  -- parsed data
    qualifier               TEXT,
    severity                TEXT,
    load_table_id           TEXT,
    load_row_id             INTEGER,
    trace_id                TEXT
);

-- -------------------------------------------------------------------
-- src_waveform_mx
-- -------------------------------------------------------------------

DROP TABLE IF EXISTS src_waveform_mx;
CREATE TABLE src_waveform_mx
(
    subject_id              INTEGER,
    reference_id            TEXT,  -- FK to the header
    waveform_id             TEXT,  -- row number inside the reference_id
    mx_datetime             TIMESTAMP,
    source_code             TEXT,  -- parsed data
    value_as_number         DOUBLE PRECISION,
    unit_source_value       TEXT, -- measurement unit
    load_table_id           TEXT,
    load_row_id             INTEGER,
    trace_id                TEXT
);

-- -------------------------------------------------------------------
-- src_waveform_subject
-- -------------------------------------------------------------------

DROP TABLE IF EXISTS src_waveform_subject;
CREATE TABLE src_waveform_subject AS
SELECT
    subject_id,
    hadm_id
FROM
    src_admissions
LIMIT 1;

-- -------------------------------------------------------------------
-- Insert sample data into src_waveform_header
-- -------------------------------------------------------------------

INSERT INTO src_waveform_header
SELECT
    '3700002_0011.CCSIMxv1' AS reference_id,
    'gs://waveform_storage/3700002/0011.wfdb' AS raw_files_path,
    subj.subject_id AS subject_id,
    subj.hadm_id AS hadm_id,
    TO_TIMESTAMP('1990-01-01', 'YYYY-MM-DD') AS start_datetime,
    TO_TIMESTAMP('1990-01-01', 'YYYY-MM-DD') + (src.row_count + 1) * INTERVAL '1 millisecond' AS end_datetime,
    '3700002_0011.CCSIMxv1.xml' AS load_table_id,
    0 AS load_row_id,
    json_build_object('reference_id', '3700002_0011', 'algorithm_id', 'CCSIMxv1')::TEXT AS trace_id
FROM
(
    SELECT COUNT(*) AS row_count 
    FROM raw_case055_ecg_lines3
) src
CROSS JOIN
    src_waveform_subject subj;

-- -------------------------------------------------------------------
-- Insert sample data into src_waveform_mx
-- -------------------------------------------------------------------

INSERT INTO src_waveform_mx
-- line_1
SELECT
    subj.subject_id AS subject_id,
    '3700002_0011.CCSIMxv1' AS reference_id,
    CONCAT('3700002_0011.CCSIMxv1', '.', src.row_id::TEXT) AS waveform_id,
    TO_TIMESTAMP('1990-01-01', 'YYYY-MM-DD') + src.row_id * INTERVAL '1 millisecond' AS mx_datetime,
    'GLOBAL QT' AS source_code,
    src.line_1 AS value_as_number,
    'UV' AS unit_source_value,
    '3700002_0011.CCSIMxv1.xml' AS load_table_id,
    0 AS load_row_id,
    json_build_object(
        'reference_id', '3700002_0011',
        'algorithm_id', 'CCSIMxv1',
        'row_id', src.row_id
    )::TEXT AS trace_id
FROM
    raw_case055_ecg_lines3 src
CROSS JOIN
    src_waveform_subject subj
UNION ALL
-- line_2
SELECT
    subj.subject_id AS subject_id,
    '3700002_0011.CCSIMxv1' AS reference_id,
    CONCAT('3700002_0011.CCSIMxv1', '.', src.row_id::TEXT) AS waveform_id,
    TO_TIMESTAMP('1990-01-01', 'YYYY-MM-DD') + src.row_id * INTERVAL '1 millisecond' AS mx_datetime,
    'GLOBAL QRS DUR' AS source_code,
    src.line_2 AS value_as_number,
    'UV' AS unit_source_value,
    '3700002_0011.CCSIMxv1.xml' AS load_table_id,
    0 AS load_row_id,
    json_build_object(
        'reference_id', '3700002_0011',
        'algorithm_id', 'CCSIMxv1',
        'row_id', src.row_id
    )::TEXT AS trace_id
FROM
    raw_case055_ecg_lines3 src
CROSS JOIN
    src_waveform_subject subj
UNION ALL
-- line_3
SELECT
    subj.subject_id AS subject_id,
    '3700002_0011.CCSIMxv1' AS reference_id,
    CONCAT('3700002_0011.CCSIMxv1', '.', src.row_id::TEXT) AS waveform_id,
    TO_TIMESTAMP('1990-01-01', 'YYYY-MM-DD') + src.row_id * INTERVAL '1 millisecond' AS mx_datetime,
    'GLOBAL QRS AXIS' AS source_code,
    src.line_3 AS value_as_number,
    'UV' AS unit_source_value,
    '3700002_0011.CCSIMxv1.xml' AS load_table_id,
    0 AS load_row_id,
    json_build_object(
        'reference_id', '3700002_0011',
        'algorithm_id', 'CCSIMxv1',
        'row_id', src.row_id
    )::TEXT AS trace_id
FROM
    raw_case055_ecg_lines3 src
CROSS JOIN
    src_waveform_subject subj;
